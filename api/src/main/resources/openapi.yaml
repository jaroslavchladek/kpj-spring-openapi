openapi: 3.1.0

info:
  title: The best KPJ Spring Web API
  version: 0.1.0
  description: This is just a testing API file.

tags:
  - name: Devices
    description: Device management

paths:
  /devices:
    get:
      tags:
        - Devices
      summary: Returns the list of all devices
      operationId: listDevices
      responses:
        200:
          description: A successfully retrieved list of devices.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Devices"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
    post:
      tags:
        - Devices
      summary: Allows to create a new device.
      operationId: createDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceRequest"
      responses:
        201:
          description: Device successfully created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device"
        400:
          description: Invalid input, object invalid
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"

    delete:
      tags:
        - Devices
      summary: Deletes all devices.
      operationId: removeDevices
      responses:
        204:
          description: All devices successfully deleted.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"

  /devices/{deviceId}:
    put:
      tags:
        - Devices
      parameters:
        - name: deviceId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      summary: Updates a device.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeviceRequest"
      responses:
        200:
          description: Device successfully updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Device"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"

components:
  schemas:
    BaseResponse:
      type: object
      description: Base response, used for all generic responses.
      properties:
        status:
          type: string
          example: "OK"
        code:
          type: integer
          example: 200
        message:
          type: string
          example: "Everything is OK"
    DeviceRequest:
      type: object
      properties:
        name:
          type: string
          example: "R2D2"
    Devices:
      type: array
      items:
        $ref: "#/components/schemas/Device"
    Device:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          example: "R2D2"